# ------------------------------
# v1.0
# ------------------------------

# added
- Toggle Victory Path Button (get list of vertex objects from HexModel -> getVictoryPath())

# fixed
- support of asymmetric boards
- rotation error of patterns
- new protocol for patterns (unnecessary information deleted; x included in pattern)

# todo
- asymmetric board implementation (Daniel)
- Victory Path logic (Jannis)
- MCTS Database inclusion (Mats)

# ------------------------------
# v1.1
# ------------------------------

# added
- Pause Button
- Game stops in GameView when finished

# updated
- currentPlayer() sometimes returned the wrong player / indexing refurbished
- ToPattern renamed to PatternGenerator

# deleted
- SpashScreen and outdated functions, classes and files

# ------------------------------
# v1.2
# ------------------------------

# added
- getBoard @Game like specified in paper
- readBoard @HexBoard like specified (fucking job as i had to implement the union find afterwards)

# ------------------------------
# v1.3
# ------------------------------

# fixed
- KI’s Hexboard Player Change 
(didn’t change player so it couldn’t detect enemies on the board (that’s the cause for our thoughts of a wrong rotation))
- minor bugfixes

#todo
- neat code comments

# ------------------------------
# v1.4
# ------------------------------

# added
- loadState @ Game.py (you can specify a state to load there and watch what happened)

in main.py you can specify "machine". then MachineGUI is called which processes multiple iterations of the game and store the results in output.txt
you can then use the loadState to have a look into the logic of the game. The first value is the amount of moves per game

# ------------------------------
# v1.5
# ------------------------------

# added
- victorypath(works really well, except for certain spezial situations...) to hexmodel
-Hexagon got a new attribute(victorypath = 0)




